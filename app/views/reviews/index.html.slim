- @title = "Отзывы"

section.page.section.review
  .header-h1 Отзывы о нашей стоматологии

  /если пользователь залогинен
  - if !current_user.nil?
    /и этот пользователь - пациент, то можем добавить отзыв (врач не может)
    - if role == "Пациент"
      .header-h1 Добавить отзыв
      .inner
        = form_for @review, url: {action: "create"} do |f|
          - if @review.errors.any?
            #error_explanation
              h2 = "#{pluralize(@review.errors.count, "error")}: обратите внимания на следующие поля:"
              ul
                - @review.errors.full_messages.each do |message|
                  li = message
          .form-inline
            .form-user.review
              = f.text_area :text_reviews, :required => true, :placeholder => "Текст отзыва*", :value => "#{@text_reviews}"
            .form-user-btn
              = f.submit("Добавить отзыв")
            .form-gr-4
              = f.hidden_field :user_id, :value => current_user.id

    - if !admin?
      - @reviews.each do |review|
        /показываем только те, у которых статус = 1, т.е. опубликован
        - if review.status_review == 1
          li.review__item
            .inner
              blockquote.review__block
                header.review__head
                  h3.review__author = review.surname + " " +  review.user_name + " " + review.patronymic
                  time.review__date = review.created_at.strftime("%d %B. %Y %H:%M")
                .review__body
                  p = review.text_reviews

  /если не залогинен
  - elsif current_user.nil?
    .review_reg
      p Чтобы оставить отзыв, нужно войти
      p = link_to "Войти", signin_path

    - @reviews.each do |review|
      /показываем только те, у которых статус = 1, т.е. опубликован
      - if review.status_review == 1
        li.review__item
          .inner
            blockquote.review__block
              header.review__head
                h3.review__author = review.surname + " " +  review.user_name + " " + review.patronymic
                time.review__date = review.created_at.strftime("%d %B %Y %H:%M")
              .review__body
                p = review.text_reviews

  /если пользователь админ, то показываем все отзывы с возможность опубликовать или снять с публикации
  - if !current_user.nil? && admin?
    - @reviews.each do |review|
      li.review__item
        blockquote.review__block
          .inner
            header.review__head
              h3.review__author = review.surname + " " +  review.user_name + " " + review.patronymic
              time.review__date = review.created_at.strftime("%d %B %Y %H:%M")
            .review__body
              p = review.text_reviews

      - if review.status_review == 0
        .nosuc = "Не опубликован"
        = form_for @review, url: {action: "create"} do |f|
          .form-gr-4
            = f.hidden_field :review_id, :value => review.id
          p = submit_tag "Опубликовать", :name => 'public_btn'

      - if review.status_review == 1
        .suc = "Опубликован"
        = form_for @review, url: {action: "create"} do |f|
          .form-gr-4
            = f.hidden_field :review_id, :value => review.id
          p = submit_tag "Снять с публикации", :name => 'nopublic_btn'